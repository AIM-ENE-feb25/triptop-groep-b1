@startuml
class ExternalServiceOrchestrator {
  - Map<String, IServiceAdapter> adapters
  - ISecurityManager securityManager
  - IExternalServiceGateway gateway
  + searchAllServices(SearchCriteria): List<SearchResult>
  + createBooking(BookingRequest): BookingConfirmation
  - aggregateResults(List<SearchResult>): CombinedResult
}

abstract class BaseServiceAdapter {
  # IExternalServiceGateway gateway
  # String serviceUrl
  # mapToSearchRequest(SearchCriteria): ServiceRequest
  # mapFromSearchResponse(ServiceResponse): SearchResult
}

class TripAdvisorAdapter extends BaseServiceAdapter {
  - mapTripAdvisorSpecificData(Response): SearchResult
}

class BookingAdapter extends BaseServiceAdapter {
  - mapBookingSpecificData(Response): SearchResult
}

class ExternalServiceGateway {
  - HttpClient httpClient
  - RetryPolicy retryPolicy
  + sendRequest(ServiceRequest): ServiceResponse
  - handleRetry(ServiceRequest): void
}

class SecurityManager {
  - CredentialStore store
  + getCredentials(String): Credentials
  - encryptCredentials(Credentials): void
}

ExternalServiceOrchestrator --> IServiceAdapter
ExternalServiceOrchestrator --> SecurityManager
BaseServiceAdapter --> ExternalServiceGateway
@enduml 